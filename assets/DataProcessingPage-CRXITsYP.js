import{j as s}from"./index-CNN7GVMM.js";import{a as R,r as p}from"./vendor-DaomY4Gh.js";import{J as _}from"./jszip.min-Cac5QOAJ.js";import{Card as X,Upload as T,InboxIcon as q,Progress as O,Message as g}from"./UIComponents-My3CkZpA.js";import U from"./ErrorBoundary-BpA_29hE.js";import Z from"./CacheManager-tbCdGYkE.js";import"./utils-DVSSZgyS.js";/* empty css                     *//* empty css              */const K="AppleHealthDB",h="healthData",J=1,D=()=>new Promise((t,l)=>{const o=indexedDB.open(K,J);o.onerror=()=>{l(new Error("无法打开数据库"))},o.onsuccess=i=>{t(i.target.result)},o.onupgradeneeded=i=>{const a=i.target.result;a.objectStoreNames.contains(h)||a.createObjectStore(h,{keyPath:"id"}).createIndex("timestamp","timestamp",{unique:!1})}}),$=async t=>`${t.name}-${t.size}-${t.lastModified}`,V=async(t,l)=>{try{const o=await D(),i=await $(t);return await o.transaction([h],"readwrite").objectStore(h).put({id:i,data:l,fileName:t.name,fileSize:t.size,timestamp:new Date().getTime()}),i}catch(o){throw console.error("保存缓存数据失败:",o),o}},Y=async t=>{try{const l=await D(),o=await $(t),a=l.transaction([h],"readonly").objectStore(h);return new Promise((d,c)=>{const y=a.get(o);y.onsuccess=E=>{const j=E.target.result;d(j||null)},y.onerror=()=>{c(new Error("读取缓存数据失败"))}})}catch(l){return console.error("加载缓存数据失败:",l),null}},G=async()=>{try{const i=(await D()).transaction([h],"readonly").objectStore(h).index("timestamp");return new Promise((a,d)=>{const c=i.getAll();c.onsuccess=y=>{a(y.target.result)},c.onerror=()=>{d(new Error("获取缓存列表失败"))}})}catch(t){return console.error("获取缓存列表失败:",t),[]}},Q=async t=>{try{const i=(await D()).transaction([h],"readwrite").objectStore(h);return new Promise((a,d)=>{const c=i.delete(t);c.onsuccess=()=>{a(!0)},c.onerror=()=>{d(new Error("删除缓存数据失败"))}})}catch(l){throw console.error("删除缓存数据失败:",l),l}},ee=async()=>{try{const o=(await D()).transaction([h],"readwrite").objectStore(h);return new Promise((i,a)=>{const d=o.clear();d.onsuccess=()=>{i(!0)},d.onerror=()=>{a(new Error("清除所有缓存数据失败"))}})}catch(t){throw console.error("清除所有缓存数据失败:",t),t}};function he(){const t=R(),[l,o]=p.useState(!1),[i,a]=p.useState(0),[d,c]=p.useState(""),[y,E]=p.useState([]),[j,N]=p.useState(!1),[S,k]=p.useState([]),u=p.useRef(null),M=p.useRef(null);p.useEffect(()=>{C()},[]);const f=e=>{k(r=>[...r,{time:new Date().toLocaleTimeString(),message:e}])},C=async()=>{try{const e=await G();E(e)}catch(e){console.error("加载缓存列表失败:",e)}},L=async e=>{if(e.type!=="application/zip"&&!e.name.endsWith(".zip"))return g.error("请上传 Apple Health 导出的 zip 文件"),!1;M.current=e;try{o(!0),a(0),c("检查缓存数据...");const r=await Y(e);if(r)return await W(r),!1;await P(e)}catch(r){console.error("处理健康数据文件失败:",r),g.error(`处理文件失败: ${r.message}`)}finally{o(!1)}return!1},P=async e=>{a(0),c("正在解压文件..."),k([]),console.log(`开始处理文件: ${e.name}, 大小: ${Math.round(e.size/1024)} KB`),f(`开始处理文件: ${e.name}, 大小: ${Math.round(e.size/1024)} KB`);const r=new _;try{const n=await r.loadAsync(e);console.log("ZIP 文件加载成功，查找 XML 文件");const b=Object.keys(n.files);console.log("ZIP 内文件列表:",b);const w=A(n);if(!w)throw console.error("未找到 export.xml 文件"),new Error("未找到健康数据导出文件（export.xml 或 导出.xml）");console.log("找到 XML 文件，开始读取内容"),c("正在读取 XML 数据...");const x=await w.async("string");console.log(`XML 内容读取完成，大小约 ${Math.round(x.length/1024)} KB`),n.forEach((re,H)=>{H._data=null});const m=await I(x);return await v(e,m),m}catch(n){throw console.error("处理健康数据文件时发生错误:",n),n}},A=e=>{let r=null;return e.forEach((n,b)=>{(n.endsWith("export.xml")||n.endsWith("导出.xml")||n==="apple_health_export/导出.xml"||n==="apple_health_export/export.xml")&&(r=b)}),r},I=async e=>{u.current&&u.current.terminate(),console.log("创建新的 Worker 实例"),f("创建新的 Worker 实例"),u.current=new Worker(new URL("/assets/xmlWorker-D_v9IhBB.js",import.meta.url),{type:"module"});try{return await new Promise((n,b)=>{u.current.onmessage=w=>{const{type:x,data:m}=w.data;console.log(`收到 Worker 消息: ${x}`),f(`收到 Worker 消息: ${x}`),x==="result"?(console.log("处理完成，收到结果数据"),f("处理完成，收到结果数据"),n(m)):x==="progress"?(a(m.progress),c(m.message)):x==="error"&&(console.error("Worker 处理错误:",m.message),f(`错误: ${m.message}`),b(new Error(m.message)))},u.current.onerror=w=>{console.error("Worker 错误:",w),f(`Worker 错误: ${w.message}`),b(w)},console.log("发送数据到 Worker 处理"),f("发送数据到 Worker 处理"),u.current.postMessage({xmlContent:e})})}finally{u.current&&(u.current.terminate(),u.current=null)}},v=async(e,r)=>{try{c("正在保存数据..."),await V(e,r),c("数据处理完成"),a(100),await C(),g.success("健康数据处理完成"),t("/data-visual",{state:{data:r}})}catch(n){throw console.error("保存结果失败:",n),n}},W=async e=>{try{c("从缓存加载数据..."),a(50),setTimeout(()=>{a(100),c("数据加载完成"),g.success("从缓存加载数据成功"),t("/data-visual",{state:{data:e.data}})},500)}catch(r){throw console.error("从缓存加载数据失败:",r),r}},B=async e=>{try{o(!0),a(0),c("正在加载缓存数据...");const r=y.find(n=>n.id===e);if(!r)throw new Error("未找到缓存数据");N(!1),await W(r)}catch(r){console.error("加载缓存数据失败:",r),g.error(`加载缓存数据失败: ${r.message}`)}finally{o(!1)}},F=async e=>{try{await Q(e),await C(),g.success("缓存数据已删除")}catch(r){console.error("删除缓存数据失败:",r),g.error(`删除缓存数据失败: ${r.message}`)}},z=async()=>{try{await ee(),await C(),g.success("所有缓存数据已清除")}catch(e){console.error("清除所有缓存数据失败:",e),g.error(`清除所有缓存数据失败: ${e.message}`)}};return s.jsx(U,{children:s.jsxs("div",{className:"apple-health-container",children:[s.jsx("div",{className:"header-actions",children:s.jsx("button",{className:"cache-manager-button",onClick:()=>N(!j),children:j?"关闭缓存管理":"缓存管理"})}),j&&s.jsx(Z,{cachedFiles:y,onLoadCache:B,onDeleteCache:F,onClearAll:z,onClose:()=>N(!1)}),s.jsxs(X,{title:"上传 Apple Health 数据",className:"upload-card",children:[s.jsx(T.Dragger,{beforeUpload:L,disabled:l,children:s.jsxs("div",{style:{padding:"20px 0"},children:[s.jsx("p",{className:"upload-icon",children:s.jsx(q,{})}),s.jsx("p",{className:"upload-text",children:"点击或拖拽文件到此区域上传"}),s.jsx("p",{className:"upload-hint",children:"支持从 Apple Health 应用导出的 ZIP 文件"})]})}),l&&s.jsxs("div",{className:"progress-container",children:[s.jsx(O,{percent:i}),s.jsx("span",{className:"progress-status",children:d})]}),S.length>0&&s.jsxs("div",{className:"logs-container",style:{marginTop:"20px",maxHeight:"200px",overflowY:"auto"},children:[s.jsx("h4",{children:"处理日志"}),S.map((e,r)=>s.jsxs("div",{className:"log-item",children:[s.jsxs("span",{className:"log-time",children:["[",e.time,"]"]}),s.jsx("span",{className:"log-message",children:e.message})]},r))]})]})]})})}export{he as default};
