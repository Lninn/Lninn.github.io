(function(){"use strict";self.onmessage=function(c){const{xmlContent:o}=c.data;try{console.log(`Worker 收到数据，大小约 ${Math.round(o.length/1024)} KB`);const e=(s,a)=>{self.postMessage({type:"progress",data:{progress:s,message:a}}),console.log(`进度更新: ${s}%, ${a}`)};e(10,"正在解析 XML 数据..."),e(30,"正在提取并分组健康数据...");const t=h(o,e);e(90,"正在生成可视化数据...");const l=g(t);self.postMessage({type:"result",data:l})}catch(e){console.error("处理健康数据时出错:",e),self.postMessage({type:"error",data:{message:e.message||"处理数据时发生未知错误"}})}};function y(c,o){const e=new RegExp(`${o}="([^"]*)"`,"i"),t=c.match(e);return t?t[1]:null}function h(c,o){const e=(c.match(/<Record /g)||[]).length;o(20,`发现约 ${e} 条健康记录`);const t={},l=new Set;let s=0;try{const a=/<Record [^>]*\/>/g;let u;for(;(u=a.exec(c))!==null;){const r=u[0],i=y(r,"type"),p=y(r,"startDate"),f=y(r,"value"),D=y(r,"unit");if(i&&p&&f)try{l.add(i);const n=new Date(p).toISOString().split("T")[0],m=parseFloat(f)||0;t[n]||(t[n]={date:n,recordCount:0,types:{},details:{}}),t[n].types[i]||(t[n].types[i]={count:0,total:0,unit:D||""}),t[n].types[i].count+=1,t[n].types[i].total+=m,t[n].recordCount+=1,t[n].details[i]=t[n].types[i].total}catch(d){console.warn(`处理记录时出错，已跳过: ${d.message}`)}if(s++,s%5e3===0){const d=30+Math.floor(s/e*60);o(d,`正在处理记录 ${s} / ${e}...`)}}return o(85,`已处理 ${s} 条健康记录，共 ${Object.keys(t).length} 天数据，${l.size} 种数据类型`),{dailyData:t,activityTypes:Array.from(l)}}catch(a){throw o(85,`处理数据时出错: ${a.message}`),a}}function g(c){const{dailyData:o,activityTypes:e}=c;return{data:Object.keys(o).sort().map(s=>{const a=o[s],u={date:s,count:a.recordCount,details:a.details||{}};return e.forEach(r=>{a.types&&a.types[r]&&r==="HKQuantityTypeIdentifierStepCount"&&(u.stepCount=a.types[r].total)}),u}),activityTypes:e}}})();
